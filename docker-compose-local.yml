version: "3"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion:${ORION_VERSION}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    expose:
      - "${ORION_PORT}"
    ports:
      - "${ORION_PORT}:${ORION_PORT}" # localhost:1026
    command: -dbhost mongo-db -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT}/version || exit 1

  iot-agent:
    image: fiware/iotagent-json:${IOT_AGENT_JSON_VERSION}
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo-db
      - mosquitto
    networks:
      - default
    expose:
      - "${IOTA_NORTH_PORT}"
    ports:
      - "${IOTA_NORTH_PORT}:${IOTA_NORTH_PORT}" # localhost:4041
    environment:
      - IOTA_CB_HOST=orion # name of the context broker to update context
      - IOTA_CB_PORT=${ORION_PORT} # port the context broker listens on to update context
      - IOTA_NORTH_PORT=${IOTA_NORTH_PORT}
      - IOTA_REGISTRY_TYPE=mongodb # Whether to hold IoT device info in memory or in a database
      - IOTA_LOG_LEVEL=DEBUG # The log level of the IoT Agent
      - IOTA_TIMESTAMP=true # Supply timestamp information with each measurement
      - IOTA_CB_NGSI_VERSION=v2 # use NGSIv2 when sending updates for active attributes
      - IOTA_AUTOCAST=true # Ensure Ultralight number values are read as numbers not strings
      - IOTA_MONGO_HOST=mongo-db # The host name of MongoDB
      - IOTA_MONGO_PORT=${MONGO_DB_PORT} # The port mongoDB is listening on
      - IOTA_MONGO_DB=iotagentjson # The name of the database used in mongoDB
      - IOTA_PROVIDER_URL=http://iot-agent:${IOTA_NORTH_PORT} # URL passed to the Context Broker when commands are registered, used as a forwarding URL location when the Context Broker issues a command to a device
      - IOTA_MQTT_HOST=mosquitto # The host name of the MQTT Broker
      - IOTA_MQTT_PORT=1883 # The port the MQTT Broker is listening on to receive topics
    healthcheck:
      test: curl --fail -s http://iot-agent:${IOTA_NORTH_PORT}/iot/about || exit 1

  #MQTT broker
  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: fiware-mosquitto
    networks:
      - default
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

  # Database
  mongo-db:
    image: mongo:${MONGO_DB_VERSION}
    hostname: mongo-db
    container_name: fiware-db-mongo
    expose:
      - "${MONGO_DB_PORT}"
    ports:
      - "${MONGO_DB_PORT}:${MONGO_DB_PORT}" # localhost:27017
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data

  mysql-db:
    image: mysql:5.7
    restart: always
    container_name: fiware-db-mysql
    environment:
      MYSQL_ROOT_PASSWORD: L7qsXhqgkXne2jJxzp8T
      MYSQL_DATABASE: hangfire
      MYSQL_USER: user
      MYSQL_PASSWORD: imGQ2gMzthcT
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    ports:
      - 3306:3306

  # Context Provider
  weather-provider:
    image: docker.pkg.github.com/sirpumpkinhead/ba_struempf_weatherprovider/weather-provider:latest
    container_name: fiware-weather-provider
    environment:
      Logging__LogLevel__Default: "Debug"
      OpenWeatherApiKey: "${OPEN_WEATHER_API_KEY}"
      ContextBrokerPath: "http://orion:1026"
      FiwareService: "garden"
      FiwareServicePath: "/flowerbed"
    ports:
      - 3000:80

  # Controller unit
  water-controller:
    image: docker.pkg.github.com/sirpumpkinhead/ba_struempf_watercontroller/water-controller:latest
    container_name: fiware-water-controller
    depends_on:
      - mysql-db
    environment:
      Logging__LogLevel__Default: "Debug"
      ConnectionStrings__HangfireDb: "Server=mysql-db;port=3306;database=hangfire;uid=user;pwd=imGQ2gMzthcT;Allow User Variables=True"
      ContextBrokerPath: "http://orion:1026"
      FiwareService: "garden"
      FiwareServicePath: "/flowerbed"
    ports:
      - 5000:80

  # Fake devices
  fake-sensor:
    image: docker.pkg.github.com/sirpumpkinhead/ba_struempf_fakedevices/fake-sensor:latest
    container_name: fiware-fake-sensors
    depends_on:
      - mosquitto

  fake-valve:
    image: docker.pkg.github.com/sirpumpkinhead/ba_struempf_fakedevices/fake-valve:latest
    container_name: fiware-fake-valve
    depends_on:
      - mosquitto

volumes:
  mongo-db: ~